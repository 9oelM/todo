{"version":3,"sources":["util/simpleFetch.js","components/Notifier/Notifier.js","util/api.js","components/Button/Button.js","components/Checkbox/Checkbox.js","components/IconButton/Icons/Icons.js","components/IconButton/CalendarButton/CalendarButton.js","components/IconButton/DeleteButton/DeleteButton.js","components/IconButton/PriorityButton/PriorityButton.js","components/TodoList/TodoPreview/TodoPreview.js","components/TodoList/TodoList.js","components/IconButton/ArrowBackButton/ArrowBackButton.js","components/TodoEditor/TodoEditor.js","components/App/App.js","serviceWorker.js","index.js"],"names":["METHODS","keyMirror","GET","PUT","POST","DELETE","generateHTTPMethod","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","baseUrl","subUrl","sendOption","onError","wrap","_context","prev","next","body","JSON","stringify","fetch","concat","objectSpread","headers","Accept","Content-Type","then","response","json","catch","error","console","abrupt","sent","stop","_x","_x2","_x3","_x4","apply","this","arguments","toast","configure","Message","closeToast","handleRetry","_ref$buttonText","buttonText","_ref$className","className","children","react_default","createElement","onClick","e","stopPropagation","msg","Notifier_Message","autoClose","position","closeOnClick","onInfo","length","undefined","info","simpleFetch","SimpleFetch","_this","classCallCheck","getMethod","_ref2","_callee2","_context2","method","_x5","_x6","putMethod","_ref3","_callee3","_context3","_x7","_x8","_x9","postMethod","_ref4","_callee4","_context4","_x10","_x11","_x12","deleteMethod","_ref5","_callee5","_context5","_x13","_x14","endsWith","slice","getAndCatchError","createAndCatchError","sendObj","cb","todo","updateAndCatchError","id","todoId","deleteAndCatchError","Button","handleClick","_ref$id","Checkbox","isChecked","type","onChange","checked","Calendar","xmlns","width","height","viewBox","d","fill","ArrowBack","Delete","Priority","level","Icon","color","cx","cy","r","selectedColor","find","elem","index","CalendarButton","time","handleClickOk","handleTimeChange","_ref$tooltipPosition","tooltipPosition","_useState","useState","_useState2","slicedToArray","isOpen","setIsOpen","_useState3","_useState4","due","setDue","moment","valueOf","react_tippy","html","rc_datetime_picker_cjs","components_Button_Button","interactive","trigger","Icons_Calendar","DeleteButton","data-confirm","Icons_Delete","PriorityButton","priority","map","num","key","si","generate","Icons_Priority","withRouter","_id","title","isDone","content","triggerUpdateFromChild","history","tempState","setTempState","handleChange","value","state","defineProperty","push","components_Checkbox_Checkbox","IconButton_CalendarButton_CalendarButton","dueInChild","IconButton_PriorityButton_PriorityButton","IconButton_DeleteButton_DeleteButton","rootState","todos","isLoading","Fragment","TodoList_TodoPreview_TodoPreview","assign","ArrowBackButton","Icons_ArrowBack","selectedTodo","match","params","setTimeout","initialTempState","chosenToSetDue","setChosenToSetDue","handleAbort","hasClickedBackButton","confirm","verb","window","IconButton_ArrowBackButton_ArrowBackButton","placeholder","target","App","setRootState","updateUtil","setUpdateUtil","setUpdateUtilInChild","val","useEffect","s","fetchData","NoPageFoundComponent","react_router_dom","basename","process","react_router","path","exact","component","components_TodoList_TodoList","components_TodoEditor_TodoEditor","Boolean","location","hostname","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b30f1b72.chunk.js","sourcesContent":["// External\nimport keyMirror from 'keymirror'\n\n/* global fetch */\n\nconst METHODS = keyMirror({\n    GET: null,\n    PUT: null,\n    POST: null,\n    DELETE: null,\n})\n\nconst generateHTTPMethod = async (baseUrl, subUrl, sendOption, onError) => {\n    if (sendOption.body) {\n        // NOTE: not yet stringified with JSON\n        if (typeof body !== 'string') {\n            sendOption.body = JSON.stringify(sendOption.body)\n        }\n    }\n    return await fetch(`${baseUrl}/${subUrl}`, {\n        ...sendOption,\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n    })\n        .then(response => response.json())\n        .catch(error => {\n            console.error(error)\n            onError()\n        })\n}\n\nclass SimpleFetch {\n    constructor(baseUrl) {\n        // NOTE: remove / at the end to avoid confusion\n        if (baseUrl.endsWith('/')) baseUrl = baseUrl.slice(0, -1)\n        this.baseUrl = baseUrl\n    }\n\n    getMethod = async (subUrl, onError) =>\n        await generateHTTPMethod(\n            this.baseUrl,\n            subUrl,\n            {\n                method: METHODS.GET,\n            },\n            onError\n        )\n\n    putMethod = async (subUrl, body, onError) =>\n        await generateHTTPMethod(\n            this.baseUrl,\n            subUrl,\n            {\n                method: METHODS.PUT,\n                body,\n            },\n            onError\n        )\n\n    postMethod = async (subUrl, body, onError) =>\n        await generateHTTPMethod(\n            this.baseUrl,\n            subUrl,\n            {\n                method: METHODS.POST,\n                body,\n            },\n            onError\n        )\n\n    deleteMethod = async (subUrl, onError) =>\n        await generateHTTPMethod(\n            this.baseUrl,\n            subUrl,\n            {\n                method: METHODS.DELETE,\n            },\n            onError\n        )\n}\n\nexport { SimpleFetch }\n","// External\nimport React from 'react'\nimport { PropTypes } from 'prop-types'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n// Internal\nimport './Notifier.scss'\n\ntoast.configure()\n\nconst Message = ({\n    closeToast,\n    handleRetry,\n    buttonText = 'Retry',\n    className = '',\n    children,\n}) => (\n    <div className=\"todo-notification\">\n        <p>{children}</p>\n        <button\n            className={`todo-notification-button ${className}`}\n            onClick={e => {\n                e.stopPropagation()\n                if (handleRetry) handleRetry()\n                closeToast()\n            }}\n        >\n            {buttonText}\n        </button>\n    </div>\n)\n\nMessage.propTypes = {\n    closeToast: PropTypes.func,\n    handleRetry: PropTypes.func,\n    buttonText: PropTypes.string,\n    className: PropTypes.string,\n    children: PropTypes.string,\n}\n\nconst onError = (msg, handleRetry) =>\n    toast.error(<Message handleRetry={handleRetry}>{msg}</Message>, {\n        autoClose: false,\n        position: 'top-right',\n        closeOnClick: false,\n    })\n\nconst onInfo = (msg, buttonText = 'OK') =>\n    toast.info(\n        <Message className=\"info\" buttonText={buttonText}>\n            {msg}\n        </Message>,\n        {\n            autoClose: true,\n            position: 'top-right',\n            closeOnClick: false,\n        }\n    )\n\nexport { onError, onInfo }\n","// Internal\nimport { SimpleFetch } from './simpleFetch'\nimport { onError } from '../components/Notifier/Notifier'\n\nconst simpleFetch = new SimpleFetch('https://server.joelmun.now.sh/')\n\nconst getTodos = onError => simpleFetch.getMethod('todo', onError)\n\nconst createTodo = (todo, onError) =>\n    simpleFetch.postMethod('todo', todo, onError)\n\nconst updateTodo = (todoId, todo, onError) =>\n    simpleFetch.putMethod(`todo/${todoId}`, todo, onError)\n\nconst deleteTodo = (todoId, onError) =>\n    simpleFetch.deleteMethod(`todo/${todoId}`, onError)\n\nconst getAndCatchError = async () =>\n    await getTodos(() =>\n        onError('An error occurred fetching from the server', getAndCatchError)\n    )\n\nconst createAndCatchError = async (sendObj, cb) => {\n    await createTodo(sendObj, () =>\n        onError('An error occurred saving todo.', () =>\n            createAndCatchError(sendObj, cb)\n        )\n    )\n    cb()\n}\n\nconst updateAndCatchError = async (id, sendObj, cb) => {\n    await updateTodo(id, sendObj, () =>\n        onError('An error occurred updating', () =>\n            updateAndCatchError(id, sendObj, cb)\n        )\n    )\n    cb()\n}\n\nconst deleteAndCatchError = async (id, cb) => {\n    await deleteTodo(id, () =>\n        onError('An error occurred deleting.', () =>\n            deleteAndCatchError(id, cb)\n        )\n    )\n    cb()\n}\n\nexport {\n    getAndCatchError,\n    createAndCatchError,\n    updateAndCatchError,\n    deleteAndCatchError,\n}\n","// External\nimport React from 'react'\nimport { PropTypes } from 'prop-types'\n\n// Internal\nimport './Button.scss'\n\nconst Button = ({ handleClick, children, id = '', className = '' }) => (\n    <div onClick={handleClick} className={`button ${className}`} id={id}>\n        {children}\n    </div>\n)\n\nButton.propTypes = {\n    handleClick: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.arrayOf(PropTypes.element),\n    ]),\n    id: PropTypes.string,\n    className: PropTypes.string,\n}\n\nexport default Button\n","// External\nimport React from 'react'\nimport { PropTypes } from 'prop-types'\n\n// Internal\nimport './Checkbox.scss'\n\nconst Checkbox = ({ handleClick, isChecked }) =>\n    isChecked ? (\n        <input\n            type=\"checkbox\"\n            onClick={e => e.stopPropagation()}\n            onChange={handleClick}\n            checked\n            className=\"checkbox\"\n        />\n    ) : (\n        <input\n            type=\"checkbox\"\n            onChange={handleClick}\n            onClick={e => e.stopPropagation()}\n            className=\"checkbox\"\n        />\n    )\n\nCheckbox.propTypes = {\n    handleClick: PropTypes.func,\n    isChecked: PropTypes.bool,\n}\n\nexport default Checkbox\n","// External\nimport React from 'react'\nimport { PropTypes } from 'prop-types'\n\n// svg source: https://material.io/tools/icons/\n\nconst Add = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n)\n\nconst Calendar = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 18H4V8h16v13z\" />\n        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n    </svg>\n)\n\nconst ArrowBack = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n    </svg>\n)\n\nconst Delete = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4z\" />\n        <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    </svg>\n)\n\nconst Priority = ({ level }) => {\n    const Icon = ({ color }) => (\n        <svg\n            fill={color}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n        >\n            <circle cx=\"12\" cy=\"19\" r=\"2\" />\n            <path d=\"M10 3h4v12h-4z\" />\n            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n        </svg>\n    )\n    Icon.propTypes = {\n        color: PropTypes.string,\n    }\n\n    const red = '#ff7070'\n    const black = '#353535'\n    const grey = '#8a8a8a'\n    const combinations = [red, black, grey]\n    const selectedColor = combinations.find(\n        (elem, index) => index + 1 === level\n    )\n    if (!selectedColor) {\n        return <Icon color={black} />\n    }\n    return <Icon color={selectedColor} />\n}\n\nPriority.propTypes = {\n    level: PropTypes.number,\n}\n\nexport { Add, Calendar, Priority, ArrowBack, Delete }\n","// External\nimport React, { useState } from 'react'\nimport { PropTypes } from 'prop-types'\nimport { Tooltip } from 'react-tippy'\nimport 'react-tippy/dist/tippy.css'\nimport { DatetimePicker } from 'rc-datetime-picker'\nimport 'rc-datetime-picker/dist/picker.min.css'\nimport moment from 'moment'\n\n// Internal\nimport { Calendar as CalendarIcon } from '../Icons/Icons'\nimport './CalendarButton.scss'\nimport Button from '../../Button/Button'\n\nconst CalendarButton = ({\n    time,\n    handleTimeChange,\n    handleClickOk,\n    className = '',\n    tooltipPosition = 'left',\n}) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const [due, setDue] = useState(time)\n    let isDueNotSetYet = due === ''\n    if (isDueNotSetYet) {\n        setDue(() => moment().valueOf())\n    }\n    return (\n        <div\n            onClick={e => {\n                e.stopPropagation()\n                setIsOpen(() => true)\n            }}\n            className={`icon-button todo-calendar ${className}`}\n        >\n            <Tooltip\n                html={\n                    <div className=\"todo-set-due\">\n                        <p>Set a date for this todo</p>\n                        <DatetimePicker\n                            moment={moment(due, 'x')}\n                            onChange={moment => {\n                                setDue(() => moment.valueOf())\n                            }}\n                        />\n                        <Button\n                            className=\"calendar-ok-button\"\n                            handleClick={e => {\n                                e.stopPropagation()\n                                if (handleClickOk) handleClickOk(due)\n                                setIsOpen(() => false)\n                            }}\n                        >\n                            <p>Set due</p>\n                        </Button>\n                    </div>\n                }\n                isOpen={isOpen}\n                interactive\n                position={tooltipPosition}\n                trigger=\"click\"\n            >\n                <CalendarIcon />\n            </Tooltip>\n        </div>\n    )\n}\n\nCalendarButton.propTypes = {\n    time: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    handleTimeChange: PropTypes.func,\n    handleClickOk: PropTypes.func,\n    className: PropTypes.string,\n    tooltipPosition: PropTypes.string,\n}\n\nexport default CalendarButton\n","// External\nimport React from 'react'\nimport { PropTypes } from 'prop-types'\n\n// Internal\nimport { Delete as DeleteIcon } from '../Icons/Icons'\nimport './DeleteButton.scss'\n\nconst DeleteButton = ({ handleClick, className = '' }) => (\n    <div\n        data-confirm=\"Are you sure to delete?\"\n        onClick={e => {\n            e.stopPropagation()\n            if (handleClick) handleClick()\n        }}\n        className={`icon-button ${className}`}\n    >\n        <DeleteIcon />\n    </div>\n)\n\nDeleteButton.propTypes = {\n    handleClick: PropTypes.func,\n    className: PropTypes.string,\n}\n\nexport default DeleteButton\n","// External\nimport React from 'react'\nimport { PropTypes } from 'prop-types'\nimport si from 'shortid'\nimport { Tooltip } from 'react-tippy'\nimport 'react-tippy/dist/tippy.css'\n\n// Internal\nimport { Priority as PriorityIcon } from '../Icons/Icons'\nimport './PriorityButton.scss'\n\nconst PriorityButton = ({\n    handleClick,\n    priority,\n    tooltipPosition = 'left',\n}) => (\n    <div\n        onClick={e => {\n            e.stopPropagation()\n        }}\n        className=\"icon-button\"\n    >\n        <Tooltip\n            html={\n                <div className=\"todo-set-priority\">\n                    <p>Set a priority of this todo</p>\n                    <div className=\"todo-priorities-container\">\n                        {[1, 2, 3].map(num => (\n                            <div\n                                key={si.generate()}\n                                onClick={() => handleClick(num)}\n                            >\n                                <PriorityIcon level={num} />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            }\n            interactive\n            position={tooltipPosition}\n            trigger=\"click\"\n        >\n            <PriorityIcon level={priority} />\n        </Tooltip>\n    </div>\n)\n\nPriorityButton.propTypes = {\n    handleClick: PropTypes.func,\n    priority: PropTypes.number,\n    tooltipPosition: PropTypes.string,\n}\n\nexport default PriorityButton\n","// External\nimport React, { useState } from 'react'\nimport { withRouter } from 'react-router'\nimport { PropTypes } from 'prop-types'\n\n// Internal\nimport { updateAndCatchError, deleteAndCatchError } from '../../../util/api'\nimport Button from '../../Button/Button'\nimport Checkbox from '../../Checkbox/Checkbox'\nimport CalendarButton from '../../IconButton/CalendarButton/CalendarButton'\nimport DeleteButton from '../../IconButton/DeleteButton/DeleteButton'\nimport PriorityButton from '../../IconButton/PriorityButton/PriorityButton'\n\nimport './TodoPreview.scss'\n\nconst TodoPreview = ({\n    _id,\n    title,\n    due,\n    priority,\n    isDone,\n    content,\n    triggerUpdateFromChild,\n    history,\n}) => {\n    const [tempState, setTempState] = useState({\n        title,\n        due,\n        priority,\n        isDone,\n        content,\n    })\n\n    const handleChange = (key, value) => {\n        setTempState(state => ({\n            ...state,\n            [key]: value,\n        }))\n    }\n\n    return (\n        <Button handleClick={() => history.push(`/editor/${_id}`)}>\n            <Checkbox\n                isChecked={isDone}\n                handleClick={async () => {\n                    updateAndCatchError(\n                        _id,\n                        {\n                            isDone: !isDone,\n                        },\n                        triggerUpdateFromChild\n                    )\n                }}\n            />\n            {isDone ? (\n                <div className=\"todo-preview-title\">\n                    <strike>{title}</strike>\n                </div>\n            ) : (\n                <div className=\"todo-preview-title\">{title}</div>\n            )}\n            <CalendarButton\n                time={tempState.due}\n                handleTimeChange={moment =>\n                    handleChange('due', moment.valueOf())\n                }\n                handleClickOk={async dueInChild =>\n                    await updateAndCatchError(\n                        _id,\n                        {\n                            due: dueInChild, // NOTE: the state for due property is managed inside CalendarButton component.\n                        },\n                        triggerUpdateFromChild\n                    )\n                }\n                className=\"leftmost-button\"\n            />\n            <PriorityButton\n                priority={tempState.priority}\n                handleClick={async priority => {\n                    handleChange('priority', priority)\n                    await updateAndCatchError(\n                        _id,\n                        {\n                            priority,\n                        },\n                        triggerUpdateFromChild\n                    )\n                }}\n            />\n            <DeleteButton\n                className=\"margin-right\"\n                handleClick={async () => {\n                    await deleteAndCatchError(_id, triggerUpdateFromChild)\n                }}\n            />\n        </Button>\n    )\n}\n\nTodoPreview.propTypes = {\n    _id: PropTypes.string,\n    title: PropTypes.string,\n    due: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    priority: PropTypes.number,\n    isDone: PropTypes.bool,\n    content: PropTypes.string,\n    triggerUpdateFromChild: PropTypes.func,\n    history: PropTypes.object,\n}\n\nexport default withRouter(TodoPreview)\n","// External\nimport React from 'react'\nimport { withRouter } from 'react-router'\nimport { PropTypes } from 'prop-types'\nimport si from 'shortid'\n\n// Internal\nimport Button from '../Button/Button'\nimport TodoPreview from './TodoPreview/TodoPreview'\nimport './TodoList.scss'\n\nconst TodoList = ({ history, rootState, triggerUpdateFromChild }) => {\n    const { todos, isLoading } = rootState\n\n    return (\n        <>\n            <Button\n                id=\"add-todo-button\"\n                handleClick={() => history.push('/editor')}\n            >\n                <p>Add a new todo</p>\n            </Button>\n            {!isLoading && todos ? (\n                todos.map(todo => (\n                    <TodoPreview\n                        key={si.generate()}\n                        triggerUpdateFromChild={triggerUpdateFromChild}\n                        {...todo}\n                    />\n                ))\n            ) : (\n                <p id=\"add-todo-loading\">Loading...</p>\n            )}\n        </>\n    )\n}\n\nTodoList.propTypes = {\n    history: PropTypes.object,\n    rootState: PropTypes.object,\n    triggerUpdateFromChild: PropTypes.func,\n}\n\nexport default withRouter(TodoList)\n","// External\nimport React from 'react'\nimport { PropTypes } from 'prop-types'\n\n// Internal\nimport { ArrowBack as ArrowBackIcon } from '../Icons/Icons'\nimport './ArrowBackButton.scss'\n\nconst ArrowBackButton = ({ handleClick }) => (\n    <div\n        onClick={e => {\n            e.stopPropagation()\n            handleClick()\n        }}\n        className=\"icon-button\"\n    >\n        <ArrowBackIcon />\n    </div>\n)\n\nArrowBackButton.propTypes = {\n    handleClick: PropTypes.func,\n}\n\nexport default ArrowBackButton\n","// External\nimport React, { useState } from 'react'\nimport { withRouter } from 'react-router'\nimport { PropTypes } from 'prop-types'\n\n// Internal\nimport {\n    createAndCatchError,\n    updateAndCatchError,\n    deleteAndCatchError,\n} from '../../util/api'\nimport { onInfo } from '../Notifier/Notifier'\nimport ArrowBackButton from '../IconButton/ArrowBackButton/ArrowBackButton'\nimport CalendarButton from '../IconButton/CalendarButton/CalendarButton'\nimport DeleteButton from '../IconButton/DeleteButton/DeleteButton'\nimport PriorityButton from '../IconButton/PriorityButton/PriorityButton'\nimport Button from '../Button/Button'\nimport Checkbox from '../Checkbox/Checkbox'\n\nimport './TodoEditor.scss'\n\nconst TodoEditor = ({ rootState, triggerUpdateFromChild, history, match }) => {\n    let selectedTodo\n    if (match.params.id) {\n        selectedTodo = rootState.todos.find(\n            ({ _id }) => _id === match.params.id\n        )\n        if (!selectedTodo) {\n            onInfo(\n                'This URL contains an invalid Todo ID. You are redirected to be allowed to create a new valid todo.'\n            )\n            setTimeout(history.push('/editor'), 5000)\n        }\n    }\n\n    const initialTempState =\n        match.params.id && selectedTodo\n            ? {\n                  ...selectedTodo,\n              }\n            : {\n                  title: '',\n                  content: '',\n                  due: '',\n                  priority: 3,\n                  isDone: false,\n              }\n\n    const [chosenToSetDue, setChosenToSetDue] = useState(false)\n    const [tempState, setTempState] = useState(initialTempState)\n    const { title, content, due, priority, isDone } = tempState\n\n    const handleChange = (key, value) => {\n        setTempState(state => ({\n            ...state,\n            [key]: value,\n        }))\n    }\n\n    const handleAbort = hasClickedBackButton => {\n        const confirm = verb =>\n            window.confirm(`Are you sure you want to ${verb}?`)\n        if (\n            !hasClickedBackButton &&\n            match.params.id &&\n            confirm('delete this todo')\n        ) {\n            deleteAndCatchError(match.params.id, triggerUpdateFromChild)\n            history.push('/')\n        } else {\n            if (confirm('abort')) {\n                setTempState(() => initialTempState)\n                history.push('/')\n            }\n        }\n    }\n\n    return (\n        <>\n            <div id=\"todo-editor-options\">\n                <ArrowBackButton handleClick={() => handleAbort(true)} />\n                <Checkbox\n                    isChecked={isDone}\n                    handleClick={() => handleChange('isDone', !isDone)}\n                />\n                <CalendarButton\n                    time={due}\n                    handleClickOk={moment => {\n                        handleChange('due', moment.valueOf())\n                        setChosenToSetDue(() => true)\n                    }}\n                    tooltipPosition=\"bottom\"\n                />\n                <PriorityButton\n                    priority={priority}\n                    handleClick={level => handleChange('priority', level)}\n                    tooltipPosition=\"bottom\"\n                />\n                <DeleteButton\n                    className=\"margin-right\"\n                    handleClick={() => handleAbort(false)}\n                />\n            </div>\n            <textarea\n                className=\"textarea\"\n                id=\"textarea-title\"\n                placeholder=\"Title\"\n                value={title}\n                onChange={e => handleChange('title', e.target.value)}\n            />\n            <textarea\n                className=\"textarea\"\n                id=\"textarea-content\"\n                placeholder=\"Enter your content here\"\n                value={content}\n                onChange={e => handleChange('content', e.target.value)}\n            />\n            <div id=\"todo-editor-save-container\">\n                <Button\n                    handleClick={async () => {\n                        if (title.length === 0 || content.length === 0) {\n                            onInfo(\n                                'You have not entered the title or the content. Please try again.'\n                            )\n                        } else {\n                            if (!match.params.id) {\n                                await createAndCatchError(\n                                    {\n                                        ...tempState,\n                                        due: chosenToSetDue ? due : '',\n                                    },\n                                    triggerUpdateFromChild\n                                )\n                            } else {\n                                await updateAndCatchError(\n                                    match.params.id,\n                                    tempState,\n                                    triggerUpdateFromChild\n                                )\n                            }\n                            history.push('/')\n                        }\n                    }}\n                >\n                    <span>Save</span>\n                </Button>\n            </div>\n        </>\n    )\n}\n\nTodoEditor.propTypes = {\n    rootState: PropTypes.object,\n    triggerUpdateFromChild: PropTypes.func,\n    history: PropTypes.object,\n    match: PropTypes.object,\n}\n\nexport default withRouter(TodoEditor)\n","// External\nimport React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { withRouter } from 'react-router'\n\n// Internal\nimport { getAndCatchError } from '../../util/api'\nimport TodoList from '../TodoList/TodoList'\nimport TodoEditor from '../TodoEditor/TodoEditor'\nimport Button from '../Button/Button'\nimport './App.scss'\n\nconst App = () => {\n    const [rootState, setRootState] = useState({\n        todos: [],\n        isLoading: false,\n    })\n\n    const [updateUtil, setUpdateUtil] = useState(0)\n    const setUpdateUtilInChild = () =>\n        setUpdateUtil(val => (val % 2 ? val + 1 : val - 1))\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setRootState(s => ({\n                ...s,\n                isLoading: true,\n            }))\n            const todos = await getAndCatchError()\n            setRootState(s => ({\n                ...s,\n                todos,\n                isLoading: false,\n            }))\n        }\n        fetchData()\n    }, [updateUtil])\n\n    const TodoListComponent = () => (\n        <section id=\"todo-list\">\n            <TodoList\n                triggerUpdateFromChild={setUpdateUtilInChild}\n                rootState={rootState}\n            />\n        </section>\n    )\n\n    const TodoEditorComponent = () => (\n        <section id=\"todo-editor\">\n            <TodoEditor\n                triggerUpdateFromChild={setUpdateUtilInChild}\n                rootState={rootState}\n            />\n        </section>\n    )\n\n    const NoPageFoundComponent = withRouter(({ history }) => (\n        <section id=\"no-page-found\">\n            <div>\n                <p>Oops!</p>\n                <p>Something is wrong.</p>\n                <p>Please try again.</p>\n            </div>\n            <Button handleClick={() => history.push('/')}>\n                Go to the index page\n            </Button>\n        </section>\n    ))\n\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <div className=\"App\">\n                <Switch>\n                    <Route path=\"/\" exact component={TodoListComponent} />\n                    <Route\n                        path=\"/editor/:id?\"\n                        component={TodoEditorComponent}\n                    />\n                    <Route component={NoPageFoundComponent} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","// External\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'roboto-fontface/css/roboto/roboto-fontface.css'\n\n// Internal\nimport App from './components/App/App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}